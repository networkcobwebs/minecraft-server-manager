{"version":3,"sources":["Dashboard/ServerSummary.js","Dashboard/PlayerListItem.js","Dashboard/PlayersSummary.js","Dashboard/Dashboard.js","Players/PlayerListItem.js","Players/Players.js","ServerControls/ProgressDialog.js","ServerControls/ServerControls.js","ServerControls/BackupBeforeNewDialog.js","ServerControls/RawMinecraftCommandDialog.js","ServerControls/BackupItem.js","ServerControls/RestoreBackupDialog.js","ServerControls/WorldControls.js","Preferences/Preferences.js","About/About.js","App.js","registerServiceWorker.js","index.js"],"names":["styles","container","margin","fontFamily","fontSize","ServerSummary","handleAcceptEula","axios","method","url","catch","error","console","log","react_default","a","createElement","Button_default","onClick","this","color","autoFocus","minecraftProperties","props","acceptedEula","Tooltip_default","title","CheckCircle_default","Error_default","started","updateAvailable","AssignmentLate_default","detectedVersion","TableCell_default","rightNow","Date","now","uptime","startTime","seconds","h","Math","floor","m","s","filter","join","formatTime","style","Table_default","TableBody_default","TableRow_default","minecraftOnline","minecraftUpdate","minecraftEulaAcceptedStatus","minecraftAcceptEulaButton","minecraftVersion","ipInfo","address","port","minecraftUptime","React","Component","PlayerListItem","player","name","PlayersSummary","online","PlayerListItem_PlayerListItem","key","players","playerInfo","summary","TableHead_default","map","displayPlayerListItems","Dashboard","Dashboard_ServerSummary","PlayersSummary_PlayersSummary","banPlayer","pardonPlayer","kickPlayer","opPlayer","deopPlayer","whitelistPlayer","SignalWifi4Bar_default","SignalWifiOff_default","opped","VerifiedUser_default","banned","DoNotDisturb_default","whitelisted","PlaylistAdd_default","IconButton_default","DoNotDisturbOn_default","Players","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","found","state","forEach","p","params","command","then","err","Players_PlayerListItem_PlayerListItem","ProgressDialog","Dialog_default","DialogContent_default","DialogContentText_default","DialogActions_default","onClose","ServerControls","progressDialogOpen","closeProgressDialog","openProgressDialog","restartMinecraft","startMinecraft","stopMinecraft","setState","_this2","_this3","_this4","ProgressDialog_ProgressDialog","open","ExpansionPanel_default","defaultExpanded","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","disabled","PlayArrow_default","Stop_default","Autorenew_default","upgradeAvailable","Cached_default","serverProperties","length","property","FormControl_default","fullWidth","InputLabel_default","htmlFor","Input_default","id","value","Divider_default","ExpansionPanelActions_default","size","BackupBeforeNewDialog","cancelDialog","newOnly","backupAndNew","RawMinecraftCommandDialog","event","updateRawCommandField","ListItem_default","button","closeDialog","ListItemText_default","primary","fullScreen","DialogTitle_default","Close_default","List_default","minecraftCommands","listCommands","BackupItem","backup","fileName","worldName","date","time","RestoreBackupDialog","backupValue","BackupItem_BackupItem","potentialBackups","Select_default","native","inputProps","displayBackupItems","FormHelperText_default","WorldControls","backupDialogOpen","helpDialogOpen","rawMinecraftCommandDialogOpen","rawCommand","restoreDialogOpen","restoreBackup","backupAndNewMinecraftWorld","backupAndRestoreMinecraftWorld","backupMinecraftWorld","closeBackupDialog","closeRawCommandDialog","closeRestoreDialog","getMinecraftWorldBackups","newMinecraftWorld","onClearCommand","onSendCommand","openBackupBeforeNewDialog","openRawCommandDialog","openRestoreDialog","restoreMinecraftWorld","updateRawCommandDialog","updateRawCommandType","target","worldBackup","filename","_this5","res","backupList","data","_this6","backupFile","BackupBeforeNewDialog_BackupBeforeNewDialog","RawMinecraftCommandDialog_RawMinecraftCommandDialog","fullHelp","RestoreBackupDialog_RestoreBackupDialog","Backup_default","Restore_default","onChange","Help_default","Preferences","About","GB","pow","mem","nodeInfo","href","eulaUrl","align","padding","cpus","model","version","debug","App","minecraftStatus","eulaOpen","handleDeclineEula","getIpInfo","getMinecraftPlayers","getMinecraftServerProperties","getMinecraftStatus","handleChange","stopMinecraftStatus","runOnce","pingWait","pingTime","statusTimerId","clearTimeout","setTimeout","playersTimerId","minecraftServerProperties","properties","e","_this7","theme","createMuiTheme","palette","blue800","primary2r","blue300","accent","deepOrangeA200","pickerHeader","tableRowColumn","height","AppBar_default","position","Tabs_default","centered","Tab_default","label","src_Dashboard_Dashboard","Players_Players","WorldControls_WorldControls","src_ServerControls_ServerControls","src_Preferences_Preferences","src_About_About","Snackbar_default","anchorOrigin","vertical","horizontal","message","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.00af9b0e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport Error from '@material-ui/icons/Error';\nimport AssignmentLate from '@material-ui/icons/AssignmentLate';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '0.95rem'\n    }\n};\n\nfunction formatTime (seconds) {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = Math.floor(seconds % 60);\n    return [\n        h,\n        m > 9 ? m : '0' + m,\n        s > 9 ? s : '0' + s,\n    ].filter(s => s).join(':');\n  }\n\nclass ServerSummary extends React.Component {\n    handleAcceptEula = () => {\n        axios({\n            method: 'post',\n            url: '/api/acceptEula'\n        }).catch(error => {\n            console.log('An error occurred accepting the EULA:', error);\n        });\n    };\n\n    minecraftAcceptEulaButton () {\n        return (\n            <Button onClick = { this.handleAcceptEula } color=\"primary\" autoFocus>\n                Accept\n            </Button>\n        );\n    }\n    minecraftEulaAcceptedStatus () {\n        let minecraftProperties = this.props.minecraftProperties;\n        \n        if (minecraftProperties && minecraftProperties.acceptedEula) {\n            return (\n                <div>\n                    <Tooltip title=\"Accepted\">\n                        <CheckCircle />\n                    </Tooltip>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip title=\"Not accepted\">\n                        <Error />\n                    </Tooltip>\n                </div>\n            );\n        }\n    }\n\n    minecraftOnline () {\n        let minecraftProperties = this.props.minecraftProperties;\n        \n        if (minecraftProperties && minecraftProperties.started) {\n            return (\n                <div>\n                    <Tooltip title=\"Running\">\n                        <CheckCircle />\n                    </Tooltip>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip title=\"Minecraft is not running\">\n                        <Error />\n                    </Tooltip>\n                </div>\n            );\n        }\n    }\n    \n    minecraftUpdate () {\n        let minecraftProperties = this.props.minecraftProperties;\n    \n        if (minecraftProperties && minecraftProperties.updateAvailable) {\n            return (\n                <div>\n                    <Tooltip title=\"Update Available\">\n                        <AssignmentLate />\n                    </Tooltip>\n                </div>\n            );\n        } else {\n            return <div></div>;\n        }\n    }\n    \n    minecraftVersion () {\n        let minecraftProperties = this.props.minecraftProperties;\n    \n        if (minecraftProperties && minecraftProperties.detectedVersion) {\n            return (\n                <TableCell>{ minecraftProperties.detectedVersion }</TableCell>\n            );\n        } else {\n            return <TableCell></TableCell>;\n        }\n    }\n\n    minecraftUptime () {\n        let minecraftProperties = this.props.minecraftProperties;\n        let rightNow = Date.now();\n        let uptime = 0;\n    \n        if (minecraftProperties && minecraftProperties.started && minecraftProperties.startTime > 0) {\n            uptime = (rightNow - minecraftProperties.startTime)/1000;\n            return (\n                <TableCell>{ formatTime(uptime) }</TableCell>\n            );\n        } else {\n            return(\n                <TableCell></TableCell>\n            );\n        }\n    }\n\n    render () {\n        return (\n            <div style={ styles.container }>\n                <h3>Server Information</h3>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>Minecraft Status</TableCell>\n                            <TableCell>\n                                { this.minecraftOnline() }\n                            </TableCell>\n                            <TableCell>\n                                { this.minecraftUpdate() }\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>EULA Accepted</TableCell>\n                            <TableCell>\n                                { this.minecraftEulaAcceptedStatus() }\n                            </TableCell>\n                            <TableCell>{ this.props.minecraftProperties.acceptedEula ? <div></div> : this.minecraftAcceptEulaButton() }</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Minecraft Version</TableCell>\n                            { this.minecraftVersion() }\n                            <TableCell></TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Server Address</TableCell>\n                            <TableCell>{ this.props.ipInfo.address ? this.props.ipInfo.address + ':' + this.props.ipInfo.port : 'Not known.' }</TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Server Uptime</TableCell>\n                            { this.minecraftUptime() }\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nServerSummary.propTypes = {\n    ipInfo: PropTypes.object.isRequired,\n    minecraftProperties: PropTypes.object.isRequired\n};\n\nexport default ServerSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nexport default class PlayerListItem extends React.Component {\n\n    render () {\n        let player = this.props.player || {};\n\n        return (\n            <TableRow>\n                <TableCell>{ player.name }</TableCell>\n            </TableRow>\n        );\n    }\n}\n\nPlayerListItem.propTypes = {\n    player: PropTypes.object.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport PlayerListItem from './PlayerListItem';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '0.95rem'\n    }\n};\n\nexport default class PlayersSummary extends React.Component {\n    displayPlayerListItems (player) {\n        if (player.online) {\n            return (\n                <PlayerListItem\n                    key = { player.key }\n                    player = { player }\n                />\n            );\n        }\n    }\n\n    render () {\n        let players = this.props.playerInfo.players || [];\n        let summary = this.props.playerInfo.summary || '';\n        \n        return (\n            <div style = { styles.container }>\n                <h3>Connected Players</h3>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>{ summary ? summary : 'Waiting on Minecraft server...' }</TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n                <Table>\n                    <TableBody>\n                        { players.map(this.displayPlayerListItems) }\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nPlayersSummary.propTypes = {\n    playerInfo: PropTypes.object.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ServerSummary from './ServerSummary.js';\nimport PlayersSummary from './PlayersSummary.js';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '0.95rem'\n    }\n};\n\nclass Dashboard extends React.Component {\n    render () {\n        return (\n            <div style={ styles.container }>\n                <ServerSummary ipInfo = { this.props.ipInfo } minecraftProperties = { this.props.minecraftProperties } />\n                <PlayersSummary playerInfo = { this.props.playerInfo } />\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    ipInfo: PropTypes.object.isRequired,\n    minecraftProperties: PropTypes.object.isRequired,\n    playerInfo: PropTypes.object.isRequired\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport OpStatus from '@material-ui/icons/VerifiedUser';\nimport NetworkOnline from '@material-ui/icons/SignalWifi4Bar';\nimport NetworkOffline from '@material-ui/icons/SignalWifiOff';\nimport Kick from '@material-ui/icons/DoNotDisturbOn';\nimport Ban from '@material-ui/icons/DoNotDisturb';\nimport WhitelistIcon from '@material-ui/icons/PlaylistAdd';\n\nexport default class PlayerListItem extends React.Component {\n\n    banPlayer () {\n        this.props.banPlayer(this.props.player.name);\n    }\n    pardonPlayer () {\n        this.props.pardonPlayer(this.props.player.name);\n    }\n    kickPlayer () {\n        this.props.kickPlayer(this.props.player.name);\n    }\n    opPlayer () {\n        this.props.opPlayer(this.props.player.name);\n    }\n    deopPlayer () {\n        this.props.deopPlayer(this.props.player.name);\n    }\n    whitelistPlayer () {\n        this.props.whitelistPlayer(this.props.player.name);\n    }\n\n    render () {\n        let player = this.props.player;\n\n        return (\n            <TableRow>\n                <TableCell>{ player.name }</TableCell>\n                <TableCell>{ player.online ? \n                    <Tooltip title=\"Online\">\n                        <NetworkOnline />\n                    </Tooltip> : \n                    <Tooltip title=\"Offline\">\n                        <NetworkOffline />\n                    </Tooltip>\n                }{ player.opped ?\n                    <Tooltip title=\"Opped\">\n                        <OpStatus />\n                    </Tooltip> : <span></span>\n                }{ player.banned ?\n                    <Tooltip title=\"Banned\">\n                        <Ban />\n                    </Tooltip> : <span></span>\n                }{ player.whitelisted ?\n                    <Tooltip title=\"Whitelisted\">\n                        <WhitelistIcon />\n                    </Tooltip> : <span></span>\n                }</TableCell>\n                <TableCell>{ player.banned ?\n                    <IconButton onClick = { this.pardonPlayer }>\n                        <Tooltip title=\"Pardon\">\n                            <Ban />\n                        </Tooltip>\n                    </IconButton> : \n                    <IconButton onClick = { this.banPlayer }>\n                        <Tooltip title=\"Ban\">\n                            <Ban />\n                        </Tooltip>\n                    </IconButton> }\n                    <IconButton onClick = { this.kickPlayer }>\n                        <Tooltip title=\"Kick\">\n                            <Kick />\n                        </Tooltip>\n                    </IconButton> { player.opped ?\n                    <IconButton onClick = { this.deopPlayer }>\n                        <Tooltip title=\"De Op\">\n                            <OpStatus />\n                        </Tooltip>\n                    </IconButton> : \n                    <IconButton onClick = { this.opPlayer }>\n                        <Tooltip title=\"Op\">\n                            <OpStatus />\n                        </Tooltip>\n                    </IconButton> }{ !player.whitelisted ?\n                    <IconButton onClick = { this.whitelistPlayer }>\n                        <Tooltip title=\"Whitelist\">\n                            <WhitelistIcon />\n                        </Tooltip>\n                    </IconButton> : <div></div> }\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nPlayerListItem.propTypes = {\n    player: PropTypes.object.isRequired,\n    whitelistPlayer: PropTypes.func.isRequired,\n    deopPlayer: PropTypes.func.isRequired,\n    opPlayer: PropTypes.func.isRequired,\n    kickPlayer: PropTypes.func.isRequired,\n    pardonPlayer: PropTypes.func.isRequired,\n    banPlayer: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport PlayerListItem from './PlayerListItem';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '0.95rem'\n    }\n};\n\nexport default class Players extends React.Component {\n    constructor(props) {\n        super(props);\n        this.banPlayer = this.banPlayer.bind(this);\n        this.deopPlayer = this.deopPlayer.bind(this);\n        this.displayPlayerListItems = this.displayPlayerListItems.bind(this);\n        this.kickPlayer = this.kickPlayer.bind(this);\n        this.opPlayer = this.opPlayer.bind(this);\n        this.pardonPlayer = this.pardonPlayer.bind(this);\n        this.whitelistPlayer = this.whitelistPlayer.bind(this);\n    }\n\n    banPlayer (player) {\n        let found = false,\n            players = this.state.players;\n\n        players.forEach(p => {\n            if (p.name === player) {\n                found = true;\n            }\n        });\n        \n        if (found) {\n            axios({\n                method: 'post',\n                url: '/api/command',\n                params: {\n                    command: '/ban ' + player\n                }\n            }).then(() => {\n                return;\n            },\n            err => {\n                console.log('An error occurred contacting the Minecraft server.', err);\n            });\n        }\n    }\n\n    pardonPlayer (player) {\n        let found = false,\n            players = this.state.players;\n\n        players.forEach(p => {\n            if (p.name === player) {\n                found = true;\n            }\n        });\n\n        if (found) {\n            axios({\n                method: 'post',\n                url: '/api/command',\n                params: {\n                    command: '/pardon ' + player\n                }\n            }).then(() => {\n                return;\n            },\n            err => {\n                console.log('An error occurred contacting the Minecraft server.', err);\n            });\n        }\n    }\n\n    kickPlayer (player) {\n        let found = false,\n            players = this.state.players;\n\n        players.forEach(p => {\n            if (p.name === player) {\n                found = true;\n            }\n        });\n\n        if (found) {\n            axios({\n                method: 'post',\n                url: '/api/command',\n                params: {\n                    command: '/kick ' + player\n                }\n            }).then(() => {\n                return;\n            },\n            err => {\n                console.log('An error occurred contacting the Minecraft server.', err);\n            });\n        }\n    }\n\n    opPlayer (player) {\n        let found = false,\n            players = this.state.players;\n\n        players.forEach(p => {\n            if (p.name === player) {\n                found = true;\n            }\n        });\n\n        if (found) {\n            axios({\n                method: 'post',\n                url: '/api/command',\n                params: {\n                    command: '/op ' + player\n                }\n            }).then(() => {\n                return;\n            },\n            err => {\n                console.log('An error occurred contacting the Minecraft server.', err);\n            });\n        }\n    }\n\n    deopPlayer (player) {\n        let found = false,\n            players = this.state.players;\n\n        players.forEach(p => {\n            if (p.name === player) {\n                found = true;\n            }\n        });\n\n        if (found) {\n            axios({\n                method: 'post',\n                url: '/api/command',\n                params: {\n                    command: '/deop ' + player\n                }\n            }).then(() => {\n                return;\n            },\n            err => {\n                console.log('An error occurred contacting the Minecraft server.', err);\n            });\n        }\n    }\n\n    whitelistPlayer (player) {\n        let found = false,\n            players = this.state.players;\n\n        players.forEach(p => {\n            if (p.name === player) {\n                found = true;\n            }\n        });\n\n        if (found) {\n            axios({\n                method: 'post',\n                url: '/api/command',\n                params: {\n                    command: '/whitelist ' + player\n                }\n            }).then(() => {\n                return;\n            },\n            err => {\n                console.log('An error occurred contacting the Minecraft server.', err);\n            });\n        }\n    }\n\n    displayPlayerListItems (player) {\n        return (\n            <PlayerListItem\n                key = { player.key }\n                player = { player }\n                banPlayer = { this.banPlayer }\n                pardonPlayer = { this.pardonPlayer }\n                kickPlayer = { this.kickPlayer }\n                opPlayer = { this.opPlayer }\n                deopPlayer = { this.deopPlayer }\n                whitelistPlayer = { this.whitelistPlayer }\n            />\n        );\n    }\n\n    render () {\n        let playerInfo;\n        if (this.props.playerInfo) {\n            playerInfo = this.props.playerInfo;\n        } else {\n            playerInfo = { summary: '', players: [] };\n        }\n        let summary = playerInfo.summary,\n            players = playerInfo.players;\n        \n        return (\n            <div style = { styles.container }>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>{ summary ? summary : 'Waiting on Minecraft server...' }</TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Player</TableCell>\n                            <TableCell>Status</TableCell>\n                            <TableCell>Actions</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { players.map(this.displayPlayerListItems) }\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nPlayers.propTypes = {\n    playerInfo: PropTypes.object.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\n\nexport default class ProgressDialog extends React.Component {\n    render () {\n        return (\n            <Dialog { ...this.props }>\n                <DialogContent>\n                    <DialogContentText>\n                        Requested action in progress...\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick = { this.props.onClose } color = \"primary\" autoFocus>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nProgressDialog.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Start from '@material-ui/icons/PlayArrow';\nimport Stop from '@material-ui/icons/Stop';\nimport Restart from '@material-ui/icons/Autorenew';\nimport Refresh from '@material-ui/icons/Cached';\nimport UpdateAvailable from '@material-ui/icons/AssignmentLate';\n\nimport ProgressDialog from './ProgressDialog.js';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '0.95rem'\n    }\n};\n\nclass ServerControls extends React.Component {\n    constructor (props) {\n        super(props);\n        \n        this.state = {\n            progressDialogOpen: false\n        };\n        this.closeProgressDialog = this.closeProgressDialog.bind(this);\n        this.openProgressDialog = this.openProgressDialog.bind(this);\n        this.restartMinecraft = this.restartMinecraft.bind(this);\n        this.startMinecraft = this.startMinecraft.bind(this);\n        this.stopMinecraft = this.stopMinecraft.bind(this);\n    }\n    \n    openProgressDialog () {\n        this.setState({ progressDialogOpen: true });\n    }\n    \n    closeProgressDialog () {\n        this.setState({ progressDialogOpen: false });\n    }\n\n    restartMinecraft () {\n        this.setState({ progressDialogOpen: true });\n        axios({\n            method: 'post',\n            url: `/api/restart`\n        }).then(() => {\n            this.setState({ progressDialogOpen: false });\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n        });\n    }\n    \n    startMinecraft () {\n        this.setState({ progressDialogOpen: true });\n        axios({\n            method: 'post',\n            url: `/api/start`\n        }).then(() => {\n            this.setState({ progressDialogOpen: false });\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n        });\n    }\n  \n    stopMinecraft () {\n        this.setState({ progressDialogOpen: true });\n        axios({\n            method: 'post',\n            url: `/api/stop`\n        }).then(() => {\n            this.setState({ progressDialogOpen: false });\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n        });\n    }\n\n    render () {\n        let minecraftProperties = this.props.minecraftProperties;\n\n        return (\n            <div style={ styles.container }>\n                <ProgressDialog\n                    open = { this.state.progressDialogOpen }\n                    onClose = { this.closeProgressDialog }\n                />\n                <ExpansionPanel defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={ <ExpandMoreIcon />} >\n                        Server Controls\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <IconButton\n                            onClick={ this.startMinecraft }\n                            disabled={ minecraftProperties.started }>\n                            <Tooltip title=\"Start\">\n                                <Start />\n                            </Tooltip>\n                        </IconButton>\n                        <IconButton\n                            onClick = { this.stopMinecraft }\n                            disabled = { !minecraftProperties.started }>\n                            <Tooltip title=\"Stop\">\n                                <Stop />\n                            </Tooltip>\n                        </IconButton>\n                        <IconButton\n                            onClick = { this.restartMinecraft }\n                            disabled = { !minecraftProperties.started }>\n                            <Tooltip title=\"Restart\">\n                                <Restart />\n                            </Tooltip>\n                        </IconButton>\n                        <IconButton \n                            disabled = { !minecraftProperties.upgradeAvailable }>\n                            <Tooltip title=\"Update\">\n                                <UpdateAvailable />\n                            </Tooltip>\n                        </IconButton>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={ <ExpandMoreIcon /> }>\n                        <div>\n                            Server Properties\n                            <IconButton >\n                                <Tooltip title=\"Refresh\">\n                                    <Refresh />\n                                </Tooltip>\n                            </IconButton>\n                        </div>\n                    </ExpansionPanelSummary>\n                    \n                    { minecraftProperties && minecraftProperties.serverProperties.length ? minecraftProperties.serverProperties.map(property => {\n                        return (\n                            <ExpansionPanelDetails key={ property.name }>\n                                <FormControl fullWidth>\n                                    <InputLabel\n                                        htmlFor=\"{ property.name }\">\n                                        { property.name }\n                                    </InputLabel>\n                                    <Input\n                                        id = { property.name }\n                                        value = { property.value }\n                                        fullWidth />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        );\n                    }) : 'Waiting on Minecraft server...' }\n                    \n                    <Divider />\n\n                    <ExpansionPanelActions>\n                        <Button size=\"small\">\n                            Cancel\n                        </Button>\n                        <Button size=\"small\" color=\"primary\">\n                            Save\n                        </Button>\n                    </ExpansionPanelActions>\n                </ExpansionPanel>\n            </div>\n        );\n    }\n}\n\nServerControls.propTypes = {\n    minecraftProperties: PropTypes.object.isRequired\n};\n\nexport default ServerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\n    \nexport default class BackupBeforeNewDialog extends React.Component {\n\n    render () {\n        return (\n            <Dialog open = { this.props.open }>\n                <DialogContent>\n                    <DialogContentText>\n                        Would you like to backup the world first?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick = { this.props.cancelDialog } color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick = { this.props.newOnly } color=\"primary\">\n                        No\n                    </Button>\n                    <Button onClick = { this.props.backupAndNew } color=\"primary\" autoFocus>\n                        Yes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nBackupBeforeNewDialog.propTypes = {\n    open: PropTypes.func.isRequired,\n    cancelDialog: PropTypes.func.isRequired,\n    newOnly: PropTypes.func.isRequired,\n    backupAndNew: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = {\n    container: {\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '0.95rem'\n    }\n};\n    \nexport default class RawMinecraftCommandDialog extends React.Component {\n    closeDialog (event) {\n        this.props.updateRawCommandField(event);\n        this.props.onClose();\n    }\n\n    listCommands (command) {\n        return (\n            <div key = { command.key }>\n                <ListItem button onClick = { () => { this.closeDialog(command.command); } }>\n                    <ListItemText primary = { command.command } />\n                    <Divider />\n                </ListItem>\n            </div>\n        );\n    }\n\n    render () {\n        return (\n            <Dialog fullScreen open = { this.props.open } style = { styles.container } >\n                <DialogTitle>\n                    <IconButton onClick = { this.props.onClose }>\n                        <CloseIcon />\n                    </IconButton>\n                    Available Minecraft Commands\n                </DialogTitle>\n                <DialogContent>\n                    <List>\n                        { this.props.minecraftCommands.map(this.listCommands) }\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick = { this.props.onClose } color=\"primary\">\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRawMinecraftCommandDialog.propTypes = {\n    minecraftCommands: PropTypes.object.isRequired,\n    open: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    updateRawCommandField: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class BackupItem extends React.Component {\n    render () {\n        let backup = this.props.backup;\n\n        return (\n            <option value = { backup.fileName }>{ backup.worldName }: Taken { backup.date } at { backup.time }</option>\n        );\n    }\n}\n\nBackupItem.propTypes = {\n    backup: PropTypes.object.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport BackupItem from './BackupItem';\n\nexport default class RestoreBackupDialog extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            backupValue: \"\"\n        };\n    }\n\n    displayBackupItems (backup) {\n        return (\n            <BackupItem\n                key = { backup.fileName }\n                backup = { backup }\n            />\n        );\n    }\n\n    render () {\n        let potentialBackups = this.props.potentialBackups;\n        \n        return (\n            <Dialog\n                open = { this.props.open }>\n                <DialogContent>\n                    <FormControl>\n                        <Select\n                            native\n                            inputProps = {{\n                                id: 'backup',\n                            }}\n                            value = { this.state.backupValue } >\n                            { potentialBackups.map(this.displayBackupItems) }\n                        </Select>\n                    </FormControl>\n                    <FormHelperText>Choose a backup to restore</FormHelperText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick = { this.props.onClose } color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick = { this.props.onClose } color=\"primary\" autoFocus>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRestoreBackupDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.func.isRequired,\n    potentialBackups: PropTypes.object.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport axios from 'axios';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Backup from '@material-ui/icons/Backup';\nimport Restore from '@material-ui/icons/Restore';\nimport New from '@material-ui/icons/Autorenew';\nimport Help from '@material-ui/icons/Help';\n\nimport BackupBeforeNewDialog from './BackupBeforeNewDialog.js';\nimport RawMinecraftCommandDialog from './RawMinecraftCommandDialog.js';\nimport ProgressDialog from './ProgressDialog.js';\nimport RestoreBackupDialog from './RestoreBackupDialog.js';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '0.95rem'\n    }\n};\n    \nexport default class WorldControls extends React.Component {\n    constructor (props) {\n        super(props);\n        \n        this.state = {\n            backupDialogOpen: false,\n            helpDialogOpen: false,\n            potentialBackups: [],\n            progressDialogOpen: false,\n            rawMinecraftCommandDialogOpen: false,\n            rawCommand: '',\n            restoreDialogOpen: false,\n            restoreBackup: {  }\n        };\n        this.backupAndNewMinecraftWorld = this.backupAndNewMinecraftWorld.bind(this);\n        this.backupAndRestoreMinecraftWorld = this.backupAndRestoreMinecraftWorld.bind(this);\n        this.backupMinecraftWorld = this.backupMinecraftWorld.bind(this);\n        this.closeBackupDialog = this.closeBackupDialog.bind(this);\n        this.closeProgressDialog = this.closeProgressDialog.bind(this);\n        this.closeRawCommandDialog = this.closeRawCommandDialog.bind(this);\n        this.closeRestoreDialog = this.closeRestoreDialog.bind(this);\n        this.getMinecraftWorldBackups = this.getMinecraftWorldBackups.bind(this);\n        this.newMinecraftWorld = this.newMinecraftWorld.bind(this);\n        this.onClearCommand = this.onClearCommand.bind(this);\n        this.onSendCommand = this.onSendCommand.bind(this);\n        this.openBackupBeforeNewDialog = this.openBackupBeforeNewDialog.bind(this);\n        this.openProgressDialog = this.openProgressDialog.bind(this);\n        this.openRawCommandDialog = this.openRawCommandDialog.bind(this);\n        this.openRestoreDialog = this.openRestoreDialog.bind(this);\n        this.restoreMinecraftWorld = this.restoreMinecraftWorld.bind(this);\n        this.updateRawCommandDialog = this.updateRawCommandDialog.bind(this);\n        this.updateRawCommandType = this.updateRawCommandType.bind(this);\n    }\n    \n    openBackupBeforeNewDialog () {\n        this.setState({ backupDialogOpen: true, progressDialogOpen: false, rawMinecraftCommandDialogOpen: false });\n    }\n    \n    closeBackupDialog () {\n        this.setState({ backupDialogOpen: false });\n    }\n    \n    openProgressDialog () {\n        this.setState({ backupDialogOpen: false, progressDialogOpen: true, rawMinecraftCommandDialogOpen: false });\n    }\n    \n    closeProgressDialog () {\n        this.setState({ progressDialogOpen: false });\n    }\n\n    openRawCommandDialog () {\n        this.setState({ backupDialogOpen: false, progressDialogOpen: false, rawMinecraftCommandDialogOpen: true });\n    }\n\n    closeRawCommandDialog () {\n        this.setState({ rawMinecraftCommandDialogOpen: false });\n    }\n\n    updateRawCommandType (event) {\n        this.setState({ rawCommand: event.target.value });\n    }\n\n    updateRawCommandDialog (command) {\n        this.setState({ rawCommand: command });\n    }\n\n    onClearCommand () {\n        this.setState({ rawCommand: '' });\n    }\n\n    openRestoreDialog () {\n        this.getMinecraftWorldBackups();\n        this.setState({ backupDialogOpen: false, progressDialogOpen: false, rawMinecraftCommandDialogOpen: false, restoreDialogOpen: true });\n    }\n\n    closeRestoreDialog (worldBackup) {\n        if (worldBackup.filename) {\n            this.setState({ restoreBackup: worldBackup });\n            console.log('Would restore world: ', worldBackup);\n            this.setState({ restoreDialogOpen: false });\n            this.restoreMinecraftWorld(worldBackup);\n        } else {\n            this.setState({ restoreDialogOpen: false });\n        }\n    }\n\n    onSendCommand () {\n        axios({\n            method: 'post',\n            url: '/api/command',\n            params: {\n                command: this.state.rawCommand\n            }\n        }).then(() => {\n            this.setState({ rawCommand: '' });\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n            this.setState({ progressDialogOpen: false });\n        });\n    }\n      \n    backupMinecraftWorld () {\n        this.setState({ backupDialogOpen: false, progressDialogOpen: true,  restoreDialogOpen: false });\n        axios({\n            method: 'post',\n            url: '/api/backupWorld'\n        }).then(() => {\n            this.setState({ progressDialogOpen: false });\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n            this.setState({ progressDialogOpen: false });\n        });\n    }\n    \n    newMinecraftWorld () {\n        this.setState({ backupDialogOpen: false, progressDialogOpen: true,  restoreDialogOpen: false });\n        axios({\n            method: 'post',\n            url: '/api/newWorld',\n            params: {\n                backup: false\n            }\n        }).then(() => {\n            this.setState({ progressDialogOpen: false });\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n            this.setState({ progressDialogOpen: false });\n        });\n    }\n\n    backupAndNewMinecraftWorld () {\n        // TODO Fix issue of if failed backup then don't nuke\n        this.backupMinecraftWorld();\n        this.newMinecraftWorld();\n    }\n\n    getMinecraftWorldBackups () {\n        axios({\n            method: 'get',\n            url: `/api/listWorldBackups`\n        }).then(res => {\n            let backupList = res.data.backupList;\n            console.log('backupList response:', backupList);\n            if (backupList.length) {\n                this.setState({ potentialBackups: backupList });\n                this.setState({ restoreDialogOpen: true });\n            } else {\n                // TODO: Show error\n                this.setState({ potentialBackups: [{key: 'nothingtoseehere', fileName: 'nope', worldName: '', date: ''}] });\n                console.log('An error occurred getting backups from the Minecraft server.', backupList);\n            }\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n            this.setState({ restoreDialogOpen: false });\n        });\n    }\n    \n    restoreMinecraftWorld (worldBackup) {\n        this.setState({ backupDialogOpen: false, progressDialogOpen: true, restoreDialogOpen: false });\n        axios({\n            method: 'post',\n            url: '/api/command',\n            params: {\n                command: '/restoreWorld',\n                backupFile: worldBackup,\n                backup: false\n            }\n        }).then(() => {\n            this.setState({ backupDialogOpen: false, progressDialogOpen: false, restoreDialogOpen: false });\n            this.setState({ restoreBackup: {} });\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n            this.setState({ restoreDialogOpen: false });\n        });\n    }\n\n    backupAndRestoreMinecraftWorld () {\n        // TODO Fix issue of if failed backup then don't nuke\n        this.backupMinecraftWorld();\n        this.restoreMinecraftWorld();\n    }\n\n    render () {\n        return (\n            <div>\n                <BackupBeforeNewDialog \n                    backupAndNew = { this.backupAndNewMinecraftWorld } \n                    newOnly = { this.newMinecraftWorld }\n                    cancelDialog = { this.closeBackupDialog }\n                    open = { this.state.backupDialogOpen }\n                />\n                <ProgressDialog\n                    open = { this.state.progressDialogOpen }\n                    onClose = { this.closeProgressDialog }\n                />\n                <RawMinecraftCommandDialog\n                    open = { this.state.rawMinecraftCommandDialogOpen }\n                    onClose = { this.closeRawCommandDialog }\n                    minecraftCommands = { this.props.minecraftProperties.fullHelp }\n                    updateRawCommandField = { this.updateRawCommandDialog }\n                />\n                <RestoreBackupDialog\n                    open = { this.state.restoreDialogOpen }\n                    onClose = { this.closeRestoreDialog }\n                    potentialBackups = { this.state.potentialBackups }\n                />\n                <ExpansionPanel style = { styles.container } defaultExpanded>\n                    <ExpansionPanelSummary expandIcon = { <ExpandMoreIcon /> }>\n                        World Controls\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <IconButton onClick = { this.backupMinecraftWorld }>\n                            <Tooltip title = \"Backup\">\n                                <Backup />\n                            </Tooltip>\n                        </IconButton>\n                        <IconButton onClick = { this.openRestoreDialog } disabled>\n                            <Tooltip title = \"Restore\">\n                                <Restore />\n                            </Tooltip>\n                        </IconButton>\n                        <IconButton onClick = { this.openBackupBeforeNewDialog }>\n                            <Tooltip title = \"New\">\n                                <New />\n                            </Tooltip>\n                        </IconButton>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel style = { styles.container }>\n                    <ExpansionPanelSummary expandIcon = {<ExpandMoreIcon />}>\n                        Send raw Minecraft command\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor = \"rawCommand\">\n                                Enter command. Click the Help icon for a full list of supported commands.\n                            </InputLabel>\n                            <Input id = 'rawCommand' fullWidth value = { this.state.rawCommand } onChange = { this.updateRawCommandType }/>\n                            <Divider />\n                            <ExpansionPanelActions>\n                                <IconButton onClick = { this.openRawCommandDialog }>\n                                    <Tooltip title = \"List available Minecraft commands\">\n                                        <Help />\n                                    </Tooltip>\n                                </IconButton>\n                                <Button size = \"small\" onClick = { this.onClearCommand }>Clear</Button>\n                                <Button size = \"small\" color=\"primary\" onClick = { this.onSendCommand }>Send Command</Button>\n                            </ExpansionPanelActions>\n                        </FormControl>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        );\n    }\n}\n\nWorldControls.propTypes = {\n    minecraftProperties: PropTypes.object.isRequired\n};\n","import React, { Component } from 'react';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '.95rem'\n    }\n};\n\nclass Preferences extends Component {\n    render () {\n        return (\n            <div style={styles.container}>\n                <p>\n                    Preferences will go here to handle Minecraft startup and status timers.\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Preferences;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Help from '@material-ui/icons/Help';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst styles = {\n    container: {\n        margin: 10,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: '.95rem'\n    }\n};\n\nclass About extends React.Component {\n    render () {\n        let minecraftProperties = this.props.minecraftProperties;\n        const GB = 1024 ** 3;\n        let mem = minecraftProperties.nodeInfo.mem / GB;\n\n        return (\n            <div style={styles.container}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell><a href={ minecraftProperties.eulaUrl }>Minecraft End User License Agreement</a></TableCell>\n                            <TableCell align='right'> </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Contributors</TableCell>\n                            <TableCell> </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>Author</TableCell>\n                            <TableCell align='right'>nickrnet</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Testing</TableCell>\n                            <TableCell align='right'> </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n                <Table padding='dense'>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>System Information</TableCell>\n                            <TableCell> </TableCell>\n                            <TableCell align='right'> </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>CPU</TableCell>\n                            <TableCell align='right'>\n                                { minecraftProperties.nodeInfo.cpus[0].model + ', ' + minecraftProperties.nodeInfo.cpus.length + ' cores' }\n                            </TableCell>\n                            <TableCell align='right'>\n                                <Tooltip title = \"Logical CPUs, both physical and virtual\">\n                                    <Help />\n                                </Tooltip>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>RAM</TableCell>\n                            <TableCell align='right'>{ mem } GB</TableCell>\n                            <TableCell align='right'> </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>NodeJS Version</TableCell>\n                            <TableCell align='right'>{ minecraftProperties.nodeInfo.version }</TableCell>\n                            <TableCell align='right'> </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n                {/* <div>\n                    <script type=\"text/javascript\">\n                        amzn_assoc_ad_type = \"banner\";\n                        amzn_assoc_marketplace = \"amazon\";\n                        amzn_assoc_region = \"US\";\n                        amzn_assoc_placement = \"assoc_banner_placement_default\";\n                        amzn_assoc_banner_type = \"ez\";\n                        amzn_assoc_p = \"9\";\n                        amzn_assoc_width = \"180\";\n                        amzn_assoc_height = \"150\";\n                        amzn_assoc_tracking_id = \"nickrnet-20\";\n                        amzn_assoc_linkid = \"2c598468f363378d5fb52de183d72a89\";\n                    </script>\n                    <script src=\"https://z-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&Operation=GetScript&ID=OneJS&WS=1\"></script>\n                </div>\n                <p>\n                    Support this project by making purchases from Amazon.\n                </p>\n                <iframe src=\"https://rcm-na.amazon-adsystem.com/e/cm?o=1&p=9&l=ez&f=ifr&linkID=94a6a8bcf4c0832533e2ed9b53ea4ccc&t=nickrnet-20&tracking_id=nickrnet-20\" width=\"180\" height=\"150\" scrolling=\"no\" border=\"1\" marginWidth=\"0\" title=\"Amazon\" style={ styles.container } frameBorder=\"0\"></iframe> */}\n            </div>\n        );\n    }\n}\n\nAbout.propTypes = {\n    minecraftProperties: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React from 'react';\n\nimport axios from 'axios';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { blue800 } from '@material-ui/core/colors';\nimport { blue300 } from '@material-ui/core/colors';\nimport { deepOrangeA200 } from '@material-ui/core/colors';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Dashboard from './Dashboard/Dashboard.js';\nimport Players from './Players/Players.js';\nimport ServerControls from './ServerControls/ServerControls.js';\nimport WorldControls from './ServerControls/WorldControls.js';\nimport Preferences from './Preferences/Preferences.js';\nimport About from './About/About.js';\n\nconst debug = false;\n\nconst getTheme = () => {\n    const theme = createMuiTheme({\n        \"palette\": {\n            \"primary\": blue800,\n            \"primary2r\": blue300,\n            \"accent\": deepOrangeA200,\n            \"pickerHeader\": blue800\n        },\n        \"tableRowColumn\": {\n            \"height\": 60\n        }\n    });\n    \n    return theme;\n};\n\nexport default class App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            debug: debug,\n            ipInfo: {},\n            minecraftStatus: {},\n            eulaOpen: false,\n            minecraftProperties: {},\n            playerInfo: {},\n            value: 0\n        };\n        if (debug) {\n            console.log('App state:', this.state);\n        }\n        this.handleAcceptEula = this.handleAcceptEula.bind(this);\n        this.handleDeclineEula = this.handleDeclineEula.bind(this);\n        this.getIpInfo = this.getIpInfo.bind(this);\n        this.getMinecraftPlayers = this.getMinecraftPlayers.bind(this);\n        this.getMinecraftServerProperties = this.getMinecraftServerProperties.bind(this);\n        this.getMinecraftStatus = this.getMinecraftStatus.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.stopMinecraftStatus = this.stopMinecraftStatus.bind(this);\n\n        this.runOnce();\n        this.getMinecraftStatus(25);\n    }\n\n    componentWillUnmount () {\n        if (debug) {\n            console.log('Application shutting down.');\n        }\n        this.stopMinecraftStatus();\n    }\n    \n    handleChange (event, value) {\n        this.setState({ value });\n    }\n\n    runOnce () {\n        this.getIpInfo();\n        this.getMinecraftServerProperties();\n    }\n\n    getIpInfo () {\n        let ipInfo;\n\n        axios(`/api/ipInfo`).then(res => {\n            ipInfo = res.data;\n            this.setState({ ipInfo });\n        });\n    }\n\n    getMinecraftStatus (pingWait) {\n        let normalPingTime = 10 * 1000,\n            appendTime = 5 * 1000,\n            maxTime = 120 * 1000,\n            pingTime;\n\n        // normally ping every 10 seconds\n        // if a fast ping was requested (from constructor/DidMount), honor it\n        // once trouble hits, add 5 seconds until 2 minutes is reached, then reset to 10 seconds\n        // once re/successful, reset to 10 seconds\n        if (!pingWait) {\n            pingTime = normalPingTime;\n        } else if (pingWait < 1000) {\n            pingTime = pingWait;\n        } else if (pingWait > maxTime) {\n            pingTime = normalPingTime;\n        } else {\n            pingTime = pingWait;\n        }\n\n        if (this.statusTimerId) {\n            clearTimeout(this.statusTimerId);\n        }\n\n        this.statusTimerId = setTimeout(() => {\n            axios(`/api/status`).then(res => {\n                let minecraftProperties = res.data;\n                this.setState({ minecraftProperties });\n                \n                this.getMinecraftPlayers();\n                // this.getMinecraftServerBannedIps();\n                // this.getMinecraftServerBannedPlayers();\n                // this.getMinecraftServerWhitelist();\n                // this.getMinecraftServerOps();\n                // this.getMinecraftServerUserCache();\n                // this.determinePlayerStates();\n\n                // if (!this.state.minecraftCommands || this.state.minecraftCommands.length === 0) {\n                //     this.getMinecraftCommands();\n                // }\n\n                if (debug) {\n                    console.log('Setting Minecraft status poller to run in', pingTime/1000, 'seconds.');\n                }\n                this.getMinecraftStatus();\n            },\n            err => {\n                let minecraftStatus = {};\n\n                this.setState({ minecraftStatus });\n\n                pingTime = pingTime + appendTime;\n\n                if (debug) {\n                    console.log('Error occurred:', err);\n                    console.log('Application state:', this.state);\n                    console.log('Setting Minecraft status poller to run in', pingTime/1000, 'seconds.');\n                }\n                this.getMinecraftStatus(pingTime);\n            });\n        }, pingTime);\n    }\n\n    stopMinecraftStatus () {\n        if (debug) {\n            console.log('Stopping Minecraft server poller.');\n        }\n\n        // let minecraftStatus = {};\n        // this.setState({ minecraftStatus });\n        \n        let minecraftProperties = {};\n        this.setState({ minecraftProperties });\n\n        if (this.statusTimerId) {\n            clearTimeout(this.statusTimerId);\n        }\n\n        if (this.playersTimerId) {\n            clearTimeout(this.playersTimerId);\n        }\n    }\n  \n    getMinecraftServerProperties () {\n        if (debug) {\n            console.log('Retrieving Minecraft Server properties.');\n        }\n\n        axios(`/api/properties`).then(res => {\n            let minecraftServerProperties = res.data;\n            minecraftServerProperties = minecraftServerProperties.properties;\n            this.setState({ minecraftServerProperties });\n            if (debug) {\n                console.log('MinecraftServer properties:', minecraftServerProperties);\n            }\n        },\n        err => {\n            console.log('An error occurred contacting the Minecraft server.', err);\n        }).catch(e => {\n            console.log('An error occurred getting the server properties:', e);\n        });\n    }\n\n    getMinecraftPlayers (pingWait) {\n        let normalPingTime = 5 * 1000,\n            appendTime = 5 * 1000,\n            maxTime = 120 * 1000,\n            pingTime;\n        let minecraftProperties = this.state.minecraftProperties;\n\n        // normally ping every 5 seconds\n        // if a fast ping was requested (from constructor/DidMount), honor it\n        // once trouble hits, add 5 seconds until 2 minutes is reached, then reset to 10 seconds\n        // once re/successful, reset to 10 seconds\n        if (!pingWait) {\n            pingTime = normalPingTime;\n        } else if (pingWait < 1000) {\n            pingTime = pingWait;\n        } else if (pingWait > maxTime) {\n            pingTime = normalPingTime;\n        } else {\n            pingTime = pingWait;\n        }\n\n        if (this.playersTimerId) {\n            clearTimeout(this.playersTimerId);\n        }\n\n        this.playersTimerId = setTimeout(() => {\n            if (minecraftProperties.started) {\n                axios({\n                    url: '/api/playerInfo'\n                }).then(res => {\n                    let playerInfo = res.data;\n                    this.setState({ playerInfo });\n                    if (this.state.debug) {\n                        console.log('Players info:', this.state.playerInfo);\n                        console.log('Setting Minecraft player poller to run in', pingTime/1000, 'seconds.');\n                    }\n\n                    this.getMinecraftPlayers();\n                },\n                err => {\n                    let playerInfo = {\n                        summary: '',\n                        players: []\n                    };\n\n                    this.setState({ playerInfo });\n\n                    pingTime = pingTime + appendTime;\n\n                    if (this.state.debug) {\n                        console.log('An error occurred getting current players:', err);\n                        console.log('Setting Minecraft player poller to run in', pingTime/1000, 'seconds.');\n                    }\n                    this.getMinecraftPlayers(pingTime);\n                });\n            } else {\n                if (this.state.debug) {\n                    console.log('Setting Minecraft player poller to run in', pingTime/1000, 'seconds.');\n                }\n                this.getMinecraftPlayers();\n            }\n        }, pingTime);\n    }\n  \n    handleAcceptEula () {\n        axios({\n            method: 'post',\n            url: '/api/acceptEula'\n        }).then(() => {\n            this.setState({ eulaOpen: false });\n        }, error => {\n            console.log('error:', error);\n            this.setState({ eulaOpen: false });\n        }).catch(error => {\n            console.log('error:', error);\n            this.setState({ eulaOpen: false });\n        });\n    }\n  \n    handleDeclineEula () {\n        axios({\n            method: 'post',\n            url: '/api/command?command=/stop'\n        }).then(() => {\n            this.setState({ eulaOpen: false });\n        }, error => {\n            console.log('error:', error);\n            this.setState({ eulaOpen: false });\n        }).catch(error => {\n            console.log('error:', error);\n            this.setState({ eulaOpen: false });\n        });\n    }\n    \n    render () {\n        let minecraftProperties = this.state.minecraftProperties;\n\n        return (\n            <MuiThemeProvider theme={ getTheme() }>\n                <AppBar position=\"static\">\n                    <Tabs\n                        value = { this.state.value }\n                        onChange = { this.handleChange }\n                        centered>\n                        <Tab label=\"Dashboard\" />\n                        <Tab label=\"Players\" />\n                        <Tab label=\"World Controls\" />\n                        <Tab label=\"Server Controls\" />\n                        <Tab label=\"Preferences\" />\n                        <Tab label=\"About\" />\n                    </Tabs>\n                </AppBar>\n                { this.state.value === 0 && <Dashboard\n                    ipInfo = { this.state.ipInfo }\n                    minecraftProperties = { minecraftProperties }\n                    playerInfo = { this.state.playerInfo }\n                /> }\n                { this.state.value === 1 && <Players\n                    playerInfo = { this.state.playerInfo }\n                /> }\n                { this.state.value === 2 && <WorldControls\n                    minecraftProperties = { minecraftProperties }\n                /> }\n                { this.state.value === 3 && <ServerControls\n                    minecraftProperties = { minecraftProperties }\n                /> }\n                { this.state.value === 4 && <Preferences /> }\n                { this.state.value === 5 && <About\n                    minecraftProperties = { minecraftProperties }\n                /> }\n                <Snackbar\n                    anchorOrigin = {\n                        {\n                            vertical: 'bottom',\n                            horizontal: 'left' \n                        }\n                    }\n                    open = { !minecraftProperties.started }\n                    message = { <span id=\"message-id\">Minecraft is currently stopped.</span> }\n                />\n                {/* <Dialog\n                    open = { this.state.eulaOpen } >\n                    <DialogTitle>{ \"Accept Minecraft End User License Agreement?\" }</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            By using this application, you agree to the terms of the Minecraft end user\n                            license agreement, available <a href={ minecraftProperties.eulaUrl }>here</a>.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick = { this.handleDeclineEula } color=\"primary\">\n                        Disagree\n                        </Button>\n                        <Button onClick = { this.handleAcceptEula } color=\"primary\" autoFocus>\n                        Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog> */}\n            </MuiThemeProvider>\n        );\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}